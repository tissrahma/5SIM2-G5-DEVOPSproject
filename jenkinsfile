pipeline {
    agent any
    stages {
        stage('Testing maven') {
            steps {
                echo 'hhhhhhhhh'
            }
        }

        stage('Checkout from GitHub') {
            steps {
                script {
                  try {
                        checkout([$class: 'GitSCM', branches: [[name: 'MohamedSlama5emeSIM2A']], userRemoteConfigs: [[url: 'https://github.com/tissrahma/5SIM2-G5-DEVOPSproject']]])
                    } catch (Exception e) {
                        currentBuild.result = 'FAILURE'
                        error("Failed to checkout from GitHub: ${e.message}")
                        emailext body: '''<!DOCTYPE html>
<html>
<head>
    <style>
        /* CSS for better styling */
        body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
        }
        .container {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: #ffffff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            border-radius: 5px;
        }
        h1 {
            color: #FF0000;
        }
        p {
            color: #333;
        }
        .link {
            text-decoration: none;
            color: #007bff;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS</h1>
        <p>Check console output at <a class="link" href="$BUILD_URL">$BUILD_URL</a> to view the results.</p>
    </div>
</body>
</html>

''', subject: 'Builds Of jenkins', to: 'medslama.1945@gmail.com'
                }
            }
        }

            stage('Maven Clean') {
            steps {
                sh 'mvn -f /var/lib/jenkins/workspace/springmohamed/DevOps_Project/pom.xml clean'
            }
            }

        stage('Maven Compile') {
            steps {
                sh 'mvn -f /var/lib/jenkins/workspace/springmohamed/DevOps_Project/pom.xml compile'
            }
        }
        stage('JUNIT/MOCKITO') {
            steps {
                script {
                    sh 'mvn -f /var/lib/jenkins/workspace/springmohamed/DevOps_Project/pom.xml clean test'
                }
            }
        }
        stage('Jacoco Coverage Report') {
            steps {
                sh 'mvn -f /var/lib/jenkins/workspace/springmohamed/DevOps_Project/pom.xml jacoco:report'
            }
        }
        stage('MVN SONARQUBE') {
            steps {
                script {
                    sh 'mvn -f /var/lib/jenkins/workspace/springmohamed/DevOps_Project/pom.xml sonar:sonar -Dsonar.login=sqa_60f7c5cfd59fd69c5a210cc13b35bcc36172873e'
                }
            }
        }

        stage('Nexus') {
            steps {
                script {
                    sh 'mvn -f /var/lib/jenkins/workspace/springmohamed/DevOps_Project/pom.xml deploy'
                }
            }
        }
        stage('Docker Image') {
            steps {
                script {
                    // Change the working directory to where your Dockerfile is located
                    dir('/var/lib/jenkins/workspace/springmohamed/DevOps_Project') {
                        // Execute the docker build command from this directory
                        sh 'docker build -t medslama21/devopsproject:1.0 -f Dockerfile .'
                    }
                }
            }
        }
        stage('Build Angular Front-end') {
            steps {
                script {
                    // Change the working directory to where your Angular project is located
                    dir('/var/lib/jenkins/workspace/springmohamed/DevOps_Project_Front') {
                        sh' npm install'
                        sh 'ng build --configuration=production'
                        // Build the Docker image for the Angular front-end
                        sh 'docker build -t medslama21/devopsproject-frontend:1.0 -f Dockerfile .'
                    }
                }
            }
        }

        stage('Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', passwordVariable: '14769075.', usernameVariable: 'medslama21')]) {
                    sh 'docker login -u medslama21 -p 14769075.'
                    sh 'docker push medslama21/devopsproject:1.0'
                    sh 'docker push medslama21/devopsproject-frontend:1.0'
                }
            }
        }
        stage('Docker-compose') {
            steps {
                script {
                    // Change the working directory to the directory containing docker-compose.yml
                    dir('/var/lib/jenkins/workspace/springmohamed/DevOps_Project') {
                        // Execute the docker-compose command
                        sh 'docker compose up -d'
                    }
                }
            }
        }
                stage('Grafana') {
            steps {
                script {
          
                        sh 'docker start grafana'
                  
                }
            }
        }
        stage('Email Notificatuon'){
            steps {
                emailext body: '''<!DOCTYPE html>
<html>
<head>
    <style>
        /* CSS for better styling */
        body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
        }
        .container {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: #ffffff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            border-radius: 5px;
        }
        h1 {
            color: #007bff;
        }
        p {
            color: #333;
        }
        .link {
            text-decoration: none;
            color: #007bff;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS</h1>
        <p>Check console output at <a class="link" href="$BUILD_URL">$BUILD_URL</a> to view the results.</p>
    </div>
</body>
</html>

''', subject: 'Builds Of jenkins', to: 'medslama.1945@gmail.com'
            }
        }

    // Ajoutez d'autres Ã©tapes de votre pipeline ici
    }
    post {
        always {
            junit '**/target/surefire-reports/**/*.xml'
        }
    }
}
