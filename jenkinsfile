pipeline {
    agent any
    stages {
        stage('Testing maven') {
            steps {
                echo 'ahmed rjeb test'
            }
        }

               stage('Checkout from GitHub') {
                   steps {
                       script {
                           // Cloner le référentiel GitHub en spécifiant l'URL
                           checkout([$class: 'GitSCM', branches: [[name: 'ahmedRjeb']], userRemoteConfigs: [[url: 'https://github.com/tissrahma/5SIM2-G5-DEVOPSproject']]])
                       }
                   }
               }

            stage('Maven Clean') {
                  steps {

                      sh 'mvn -f /var/lib/jenkins/workspace/ArjebDevops/DevOps_Project/pom.xml clean'
                  }
              }

              stage('Maven Compile') {
                  steps {

                      sh 'mvn -f /var/lib/jenkins/workspace/ArjebDevops/DevOps_Project/pom.xml compile'
                  }
              }
              stage('MVN SONARQUBE') {
                  steps {
                      script {

                          sh 'mvn -f /var/lib/jenkins/workspace/ArjebDevops/DevOps_Project/pom.xml sonar:sonar -Dsonar.login=sqa_80b6171dc2a702a035e7e20cff281137074de01a'
                      }
                  }
              }

        stage('JUNIT/MOCKITO') {
            steps {

                script {
                   sh 'mvn -f /var/lib/jenkins/workspace/ArjebDevops/DevOps_Project/pom.xml clean test'
            }
            }
        }
        stage('Nexus') {
                    steps {
                        script {
                            sh 'mvn -f /var/lib/jenkins/workspace/ArjebDevops/DevOps_Project/pom.xml deploy'
                        }
                    }
                }
                stage('Docker Image') {
                            steps {
                                script {
                                    // Change the working directory to where your Dockerfile is located
                                    dir('/var/lib/jenkins/workspace/ArjebDevops/DevOps_Project') {
                                        // Execute the docker build command from this directory
                                        sh 'docker build -t arjeb/devopsproject:1.0 -f Dockerfile .'
                                    }
                                }
                            }
                        }

                        stage('Docker Hub') {
                            steps {
                                withCredentials([usernamePassword(credentialsId: 'dockerhubcredentialsahmed', passwordVariable: 'ahmedahmed.', usernameVariable: 'arjeb')]) {
                                    sh "docker login -u arjeb -p ahmedahmed"
                                    sh 'docker push arjeb/devopsproject:1.0'

                                }
                            }
                        }

                stage('Docker-compose') {
                    steps {
                        script {
                            // Change the working directory to the directory containing docker-compose.yml
                            dir('/var/lib/jenkins/workspace/ArjebDevops/DevOps_Project') {
                                // Execute the docker-compose command
                                sh 'docker compose up -d'
                            }
                        }
                    }
                }

    }
  post {
       always {

            junit '**/target/surefire-reports/**/*.xml'

                }
    }
}